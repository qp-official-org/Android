// Generated by view binder compiler. Do not edit!
package com.example.qp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView searchBackIv;

  @NonNull
  public final ConstraintLayout searchBar;

  @NonNull
  public final ImageView searchImageBt;

  @NonNull
  public final SearchView searchInputSv;

  @NonNull
  public final RecyclerView searchMatchQuestionRv;

  @NonNull
  public final ImageView searchRecentLineIv;

  @NonNull
  public final TextView searchRecentTitleTv;

  @NonNull
  public final ConstraintLayout searchRecentWord;

  @NonNull
  public final Button searchRegisterBt;

  @NonNull
  public final ConstraintLayout searchRegisterInfo;

  @NonNull
  public final TextView searhNoResultTv;

  private ActivitySearchBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView searchBackIv,
      @NonNull ConstraintLayout searchBar, @NonNull ImageView searchImageBt,
      @NonNull SearchView searchInputSv, @NonNull RecyclerView searchMatchQuestionRv,
      @NonNull ImageView searchRecentLineIv, @NonNull TextView searchRecentTitleTv,
      @NonNull ConstraintLayout searchRecentWord, @NonNull Button searchRegisterBt,
      @NonNull ConstraintLayout searchRegisterInfo, @NonNull TextView searhNoResultTv) {
    this.rootView = rootView;
    this.searchBackIv = searchBackIv;
    this.searchBar = searchBar;
    this.searchImageBt = searchImageBt;
    this.searchInputSv = searchInputSv;
    this.searchMatchQuestionRv = searchMatchQuestionRv;
    this.searchRecentLineIv = searchRecentLineIv;
    this.searchRecentTitleTv = searchRecentTitleTv;
    this.searchRecentWord = searchRecentWord;
    this.searchRegisterBt = searchRegisterBt;
    this.searchRegisterInfo = searchRegisterInfo;
    this.searhNoResultTv = searhNoResultTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.search_back_iv;
      ImageView searchBackIv = ViewBindings.findChildViewById(rootView, id);
      if (searchBackIv == null) {
        break missingId;
      }

      id = R.id.search_bar;
      ConstraintLayout searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_image_bt;
      ImageView searchImageBt = ViewBindings.findChildViewById(rootView, id);
      if (searchImageBt == null) {
        break missingId;
      }

      id = R.id.search_input_sv;
      SearchView searchInputSv = ViewBindings.findChildViewById(rootView, id);
      if (searchInputSv == null) {
        break missingId;
      }

      id = R.id.search_match_question_rv;
      RecyclerView searchMatchQuestionRv = ViewBindings.findChildViewById(rootView, id);
      if (searchMatchQuestionRv == null) {
        break missingId;
      }

      id = R.id.search_recent_line_iv;
      ImageView searchRecentLineIv = ViewBindings.findChildViewById(rootView, id);
      if (searchRecentLineIv == null) {
        break missingId;
      }

      id = R.id.search_recent_title_tv;
      TextView searchRecentTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (searchRecentTitleTv == null) {
        break missingId;
      }

      id = R.id.search_recent_word;
      ConstraintLayout searchRecentWord = ViewBindings.findChildViewById(rootView, id);
      if (searchRecentWord == null) {
        break missingId;
      }

      id = R.id.search_register_bt;
      Button searchRegisterBt = ViewBindings.findChildViewById(rootView, id);
      if (searchRegisterBt == null) {
        break missingId;
      }

      id = R.id.search_register_info;
      ConstraintLayout searchRegisterInfo = ViewBindings.findChildViewById(rootView, id);
      if (searchRegisterInfo == null) {
        break missingId;
      }

      id = R.id.searh_no_result_tv;
      TextView searhNoResultTv = ViewBindings.findChildViewById(rootView, id);
      if (searhNoResultTv == null) {
        break missingId;
      }

      return new ActivitySearchBinding((ConstraintLayout) rootView, searchBackIv, searchBar,
          searchImageBt, searchInputSv, searchMatchQuestionRv, searchRecentLineIv,
          searchRecentTitleTv, searchRecentWord, searchRegisterBt, searchRegisterInfo,
          searhNoResultTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
