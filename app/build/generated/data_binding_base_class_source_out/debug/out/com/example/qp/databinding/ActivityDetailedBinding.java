// Generated by view binder compiler. Do not edit!
package com.example.qp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.qp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailedBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View answerBorderLine;

  @NonNull
  public final TextView answerBtn;

  @NonNull
  public final TextView answerCountTv;

  @NonNull
  public final ImageButton answerMoreBtn;

  @NonNull
  public final ImageButton answerNoticeBtn;

  @NonNull
  public final RecyclerView answerRv;

  @NonNull
  public final TextView detailedQpLogoTv;

  @NonNull
  public final TextView detailedQuestionContentTv;

  @NonNull
  public final TextView detailedQuestionTimeTv;

  @NonNull
  public final TextView detailedQuestionTitleTv;

  @NonNull
  public final LinearLayout nextQuestionView;

  @NonNull
  public final TextView nofityBtn;

  @NonNull
  public final ConstraintLayout noticeView;

  @NonNull
  public final TextView notifyTv;

  @NonNull
  public final LinearLayout prevQuestionView;

  @NonNull
  public final ConstraintLayout profileBar;

  @NonNull
  public final ConstraintLayout questionBox;

  @NonNull
  public final ConstraintLayout questionLayout;

  @NonNull
  public final ImageView questionUserImg;

  @NonNull
  public final ConstraintLayout writeAnswerContainer;

  private ActivityDetailedBinding(@NonNull LinearLayout rootView, @NonNull View answerBorderLine,
      @NonNull TextView answerBtn, @NonNull TextView answerCountTv,
      @NonNull ImageButton answerMoreBtn, @NonNull ImageButton answerNoticeBtn,
      @NonNull RecyclerView answerRv, @NonNull TextView detailedQpLogoTv,
      @NonNull TextView detailedQuestionContentTv, @NonNull TextView detailedQuestionTimeTv,
      @NonNull TextView detailedQuestionTitleTv, @NonNull LinearLayout nextQuestionView,
      @NonNull TextView nofityBtn, @NonNull ConstraintLayout noticeView, @NonNull TextView notifyTv,
      @NonNull LinearLayout prevQuestionView, @NonNull ConstraintLayout profileBar,
      @NonNull ConstraintLayout questionBox, @NonNull ConstraintLayout questionLayout,
      @NonNull ImageView questionUserImg, @NonNull ConstraintLayout writeAnswerContainer) {
    this.rootView = rootView;
    this.answerBorderLine = answerBorderLine;
    this.answerBtn = answerBtn;
    this.answerCountTv = answerCountTv;
    this.answerMoreBtn = answerMoreBtn;
    this.answerNoticeBtn = answerNoticeBtn;
    this.answerRv = answerRv;
    this.detailedQpLogoTv = detailedQpLogoTv;
    this.detailedQuestionContentTv = detailedQuestionContentTv;
    this.detailedQuestionTimeTv = detailedQuestionTimeTv;
    this.detailedQuestionTitleTv = detailedQuestionTitleTv;
    this.nextQuestionView = nextQuestionView;
    this.nofityBtn = nofityBtn;
    this.noticeView = noticeView;
    this.notifyTv = notifyTv;
    this.prevQuestionView = prevQuestionView;
    this.profileBar = profileBar;
    this.questionBox = questionBox;
    this.questionLayout = questionLayout;
    this.questionUserImg = questionUserImg;
    this.writeAnswerContainer = writeAnswerContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detailed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer_border_line;
      View answerBorderLine = ViewBindings.findChildViewById(rootView, id);
      if (answerBorderLine == null) {
        break missingId;
      }

      id = R.id.answer_btn;
      TextView answerBtn = ViewBindings.findChildViewById(rootView, id);
      if (answerBtn == null) {
        break missingId;
      }

      id = R.id.answer_count_tv;
      TextView answerCountTv = ViewBindings.findChildViewById(rootView, id);
      if (answerCountTv == null) {
        break missingId;
      }

      id = R.id.answer_more_btn;
      ImageButton answerMoreBtn = ViewBindings.findChildViewById(rootView, id);
      if (answerMoreBtn == null) {
        break missingId;
      }

      id = R.id.answer_notice_btn;
      ImageButton answerNoticeBtn = ViewBindings.findChildViewById(rootView, id);
      if (answerNoticeBtn == null) {
        break missingId;
      }

      id = R.id.answer_rv;
      RecyclerView answerRv = ViewBindings.findChildViewById(rootView, id);
      if (answerRv == null) {
        break missingId;
      }

      id = R.id.detailed_qp_logo_tv;
      TextView detailedQpLogoTv = ViewBindings.findChildViewById(rootView, id);
      if (detailedQpLogoTv == null) {
        break missingId;
      }

      id = R.id.detailed_question_content_tv;
      TextView detailedQuestionContentTv = ViewBindings.findChildViewById(rootView, id);
      if (detailedQuestionContentTv == null) {
        break missingId;
      }

      id = R.id.detailed_question_time_tv;
      TextView detailedQuestionTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (detailedQuestionTimeTv == null) {
        break missingId;
      }

      id = R.id.detailed_question_title_tv;
      TextView detailedQuestionTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (detailedQuestionTitleTv == null) {
        break missingId;
      }

      id = R.id.next_question_view;
      LinearLayout nextQuestionView = ViewBindings.findChildViewById(rootView, id);
      if (nextQuestionView == null) {
        break missingId;
      }

      id = R.id.nofity_btn;
      TextView nofityBtn = ViewBindings.findChildViewById(rootView, id);
      if (nofityBtn == null) {
        break missingId;
      }

      id = R.id.notice_view;
      ConstraintLayout noticeView = ViewBindings.findChildViewById(rootView, id);
      if (noticeView == null) {
        break missingId;
      }

      id = R.id.notify_tv;
      TextView notifyTv = ViewBindings.findChildViewById(rootView, id);
      if (notifyTv == null) {
        break missingId;
      }

      id = R.id.prev_question_view;
      LinearLayout prevQuestionView = ViewBindings.findChildViewById(rootView, id);
      if (prevQuestionView == null) {
        break missingId;
      }

      id = R.id.profile_bar;
      ConstraintLayout profileBar = ViewBindings.findChildViewById(rootView, id);
      if (profileBar == null) {
        break missingId;
      }

      id = R.id.question_box;
      ConstraintLayout questionBox = ViewBindings.findChildViewById(rootView, id);
      if (questionBox == null) {
        break missingId;
      }

      id = R.id.question_layout;
      ConstraintLayout questionLayout = ViewBindings.findChildViewById(rootView, id);
      if (questionLayout == null) {
        break missingId;
      }

      id = R.id.question_user_img;
      ImageView questionUserImg = ViewBindings.findChildViewById(rootView, id);
      if (questionUserImg == null) {
        break missingId;
      }

      id = R.id.write_answer_container;
      ConstraintLayout writeAnswerContainer = ViewBindings.findChildViewById(rootView, id);
      if (writeAnswerContainer == null) {
        break missingId;
      }

      return new ActivityDetailedBinding((LinearLayout) rootView, answerBorderLine, answerBtn,
          answerCountTv, answerMoreBtn, answerNoticeBtn, answerRv, detailedQpLogoTv,
          detailedQuestionContentTv, detailedQuestionTimeTv, detailedQuestionTitleTv,
          nextQuestionView, nofityBtn, noticeView, notifyTv, prevQuestionView, profileBar,
          questionBox, questionLayout, questionUserImg, writeAnswerContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
